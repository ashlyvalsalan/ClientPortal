@model ClientPortal.ViewModels.IssueDetailViewModel

@{
    ViewBag.Title = "Details";

}

<script src="https://ajax.googleapis.com/ajax/libs/jquery/3.5.1/jquery.min.js"></script>
<style>
    #idIssueList {
        list-style-type: none;
    }
</style>
<body>

    <div class="container">
        <h1>@Model.Issue.issueID @Model.Issue.issueTitle Status:[@Model.IssueStatus.ClientTitle]</h1>
        <hr />
        <div class="col-sm-8">


            @using (Html.BeginForm("AddNote", "Issues", FormMethod.Post))
            {

                <h4>Details</h4>
                <p>@Model.Issue.issueDescription</p>


                @Html.HiddenFor(m => m.Note.objectID, new { @Value = Model.Issue.issueID })

                <h4>Add Comments</h4>

                @Html.TextAreaFor(m => m.Note.noteText, new { @class = "form-control" })
                <label id="lblNewcomment"></label>
                <br />

                <input type="submit" id="addComments" value="Add" />
                <br />
            }
            @if (Model.Notes.Count() != 0)
            {
                <table class="table">
                    <tr>
                        <th>Date</th>
                        <th>Note</th>
                        <th>By</th>
                    </tr>

                    @foreach (var item in Model.Notes)
                    {
                        var person = Model.People.FirstOrDefault(x => x.PersonID == item.createdByID);

                        <tr>
                            @if (person != null)
                            {
                                <td>
                                    @Convert.ToString(string.Format("{0:dd/MM/yyyy}", item.createdDate))
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => item.noteText)
                                </td>
                                <td>
                                    @person.FirstName @person.LastName
                                </td>
                            }
                        </tr>

                    }

                </table>
            }
            else
            {
                <span>No Notes</span>
            }
        </div>
        <div class="col-sm-4">

            <h4>
                Attachments
            </h4>
            <p id="uploadedFiles">
                @if (Model.Attachments.Any())
                {
                    foreach (var item in Model.Attachments)
                    {

                        <a href="@Url.Content("~/taskItUploads/" + System.IO.Path.GetFileName(item.originalFileName))" target="_blank">@System.IO.Path.GetFileName(item.originalFileName)</a>
                        <br />

                    }
                }
                else
                {
                    <span>No attachments</span>
                }
                <br />
                <label for="file-upload" id="" class="custom-file-upload">
                    Upload New Attachments
                </label>
                <br />
                <input type="file" id="FileUpload1" />
                <input type="button" id="btnUpload" value="Upload Files" />
                <br />
                <label id="lblSuccess"></label>
            </p>

            <br />
            <p>
                @if (Convert.ToInt32(Model.Issue.issueStatusID) == 11)
                {
                    <input type="button" id="btnReopenIssue" value="Reopen this Issue" />
                }
                else if (Convert.ToInt32(Model.Issue.issueStatusID) == 13)
                {

                    <input type="button" id="btnReturn" value="Return to S7" />
                    <input type="button" id="btnMarkComplete" value="Mark complete" />
                }
                else if (Convert.ToInt32(Model.Issue.issueStatusID) == 14)
                {
                    <input type="button" id="btnReturn" value="Return to S7" />
                    <input type="button" id="btnMarkComplete" value="Mark complete" />

                }
            </p>
            <p>Issue Created: @String.Format("{0:d MMM yyyy}", Model.Issue.CreatedDate)</p>


            <p>Last Modified</p>@Model.Issue.ModifiedDate
        </div>
    </div>

    <br />
    <a href="/Issues/solutionIssues?ID=@Model.Issue.solutionId">Return To List</a>
    <script>
            $(document).ready(function () {
                    $("#idAddIssue").hide();
                    $("#btnNewUpload").hide();
                    $("#idCancelledIssues").hide();
                    $(".issuelist-filter").change(function () {
                    var componentID = $('#componentID').val();
                    var statusID = $('#statusID').val();
                    if (!componentID) {
                        componentID = 0;
                    }
                    if (!statusID) {
                        statusID = 0;
                    }

                    $.ajax({
                        type: "Post",
                        url: "/Issues/filterStatus/?componentID=" + componentID + "&statusID=" + statusID + "&solutionID=" +@Model.Issue.solutionId,

                        success: function (response) {
                            $("#divList").html(response);
                        }
                    });
                    });


                    $('#btnUpload').click(function () {


                        if (window.FormData !== undefined) {

                            var fileUpload = $("#FileUpload1").get(0);
                            var files = fileUpload.files;
                            var fileData = new FormData();


                            for (var i = 0; i < files.length; i++) {
                                fileData.append(files[i].name, files[i]);
                            }



                            $.ajax({
                                type: "POST",
                                url: '/Issues/UploadFiles/?issueID=' + @Model.Issue.issueID,

                                contentType: false,
                                processData: false,
                                data: fileData,
                                success: function (response) {
                                    $("#FileUpload1").hide();
                                    $("#btnUpload").hide();
                                    $("#uploadedFiles").html(response);
                                    $("btnNewUpload").show();
                                }


                            });
                        } else {
                            alert("FormData is not supported.");
                        }
                    });


                    $("#btnReopenIssue").click(function () {

                    $.ajax({
                        type: "Post",
                        url: "/Issues/statusChangeOnReopenButtonClick/?issueID=" + @Model.Issue.issueID,

                    });
                    });


                    $("#btnReturn").click(function () {

                    $.ajax({
                        type: "Post",
                        url: "/Issues/statusChangeOnReturnLink/?issueID=" + @Model.Issue.issueID,

                        success: function (response) {
                            $("#btnReturn").hide();
                        }
                    });
                    });

                    $("#btnMarkComplete").click(function () {

                    $.ajax({
                        type: "Post",
                        url: "/Issues/statusChangeOnMarkComplete/?issueID=" + @Model.Issue.issueID,

                        success: function (response) {
                            $("#btnMarkComplete").hide();
                        }

                    });
                    });

            });
    </script>


</body>

